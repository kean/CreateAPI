// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

struct MapTest: Codable {
    var mapMapOfString: [String: [String: String]]?
    var mapOfEnumString: [String: MapOfEnumStringItem]?

    enum MapOfEnumStringItem: String, Codable, CaseIterable {
        case upper = "UPPER"
        case lower
    }

    init(mapMapOfString: [String: [String: String]]? = nil, mapOfEnumString: [String: MapOfEnumStringItem]? = nil) {
        self.mapMapOfString = mapMapOfString
        self.mapOfEnumString = mapOfEnumString
    }

    init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.mapMapOfString = try values.decodeIfPresent([String: [String: String]].self, forKey: "map_map_of_string")
        self.mapOfEnumString = try values.decodeIfPresent([String: MapOfEnumStringItem].self, forKey: "map_of_enum_string")
    }

    func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(mapMapOfString, forKey: "map_map_of_string")
        try values.encodeIfPresent(mapOfEnumString, forKey: "map_of_enum_string")
    }
}
