// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Model for testing model name same as property name
struct Name: Codable {
    var name: Int32
    var snakeCase: Int32?
    var property: String?
    var _123Number: Int?

    init(name: Int32, snakeCase: Int32? = nil, property: String? = nil, _123Number: Int? = nil) {
        self.name = name
        self.snakeCase = snakeCase
        self.property = property
        self._123Number = _123Number
    }

    init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.name = try values.decode(Int32.self, forKey: "name")
        self.snakeCase = try values.decodeIfPresent(Int32.self, forKey: "snake_case")
        self.property = try values.decodeIfPresent(String.self, forKey: "property")
        self._123Number = try values.decodeIfPresent(Int.self, forKey: "123Number")
    }

    func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(name, forKey: "name")
        try values.encodeIfPresent(snakeCase, forKey: "snake_case")
        try values.encodeIfPresent(property, forKey: "property")
        try values.encodeIfPresent(_123Number, forKey: "123Number")
    }
}
