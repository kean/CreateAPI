// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct Dog: Codable {
    public var className: String
    public var color: String?
    public var breed: String?
    public var image: Image?
    public var goodBoy: String
    public var family: String?

    public init(className: String, color: String? = "red", breed: String? = nil, image: Image? = nil, goodBoy: String, family: String? = nil) {
        self.className = className
        self.color = color
        self.breed = breed
        self.image = image
        self.goodBoy = goodBoy
        self.family = family
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.className = try values.decode(String.self, forKey: "className")
        self.color = try values.decodeIfPresent(String.self, forKey: "color")
        self.breed = try values.decodeIfPresent(String.self, forKey: "breed")
        self.image = try values.decodeIfPresent(Image.self, forKey: "image")
        self.goodBoy = try values.decode(String.self, forKey: "good_boy")
        self.family = try values.decodeIfPresent(String.self, forKey: "family")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(className, forKey: "className")
        try values.encodeIfPresent(color, forKey: "color")
        try values.encodeIfPresent(breed, forKey: "breed")
        try values.encodeIfPresent(image, forKey: "image")
        try values.encode(goodBoy, forKey: "good_boy")
        try values.encodeIfPresent(family, forKey: "family")
    }
}
