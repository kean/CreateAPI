// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct Tag: Codable {
    public var identifier: Int64?
    public var name: String?

    public init(identifier: Int64? = nil, name: String? = nil) {
        self.identifier = identifier
        self.name = name
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.identifier = try values.decodeIfPresent(Int64.self, forKey: "id")
        self.name = try values.decodeIfPresent(String.self, forKey: "name")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encodeIfPresent(identifier, forKey: "id")
        try values.encodeIfPresent(name, forKey: "name")
    }
}
