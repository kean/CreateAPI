// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct ScimUserList: Codable {
    /// SCIM schema used.
    public var schemas: [String]
    public var totalResults: Int
    /// Example: 10
    public var itemsPerPage: Int
    public var startIndex: Int
    public var resources: [ScimUser]

    public init(schemas: [String], totalResults: Int, itemsPerPage: Int, startIndex: Int, resources: [ScimUser]) {
        self.schemas = schemas
        self.totalResults = totalResults
        self.itemsPerPage = itemsPerPage
        self.startIndex = startIndex
        self.resources = resources
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.schemas = try values.decode([String].self, forKey: "schemas")
        self.totalResults = try values.decode(Int.self, forKey: "totalResults")
        self.itemsPerPage = try values.decode(Int.self, forKey: "itemsPerPage")
        self.startIndex = try values.decode(Int.self, forKey: "startIndex")
        self.resources = try values.decode([ScimUser].self, forKey: "Resources")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(schemas, forKey: "schemas")
        try values.encode(totalResults, forKey: "totalResults")
        try values.encode(itemsPerPage, forKey: "itemsPerPage")
        try values.encode(startIndex, forKey: "startIndex")
        try values.encode(resources, forKey: "Resources")
    }
}
