// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct Dog: Codable {
    public var className: String
    public var color: String?
    public var breed: Breed?
    public var image: Image?

    public enum Breed: String, Codable, CaseIterable {
        case large = "Large"
        case medium = "Medium"
        case small = "Small"
    }

    public init(className: String, color: String? = nil, breed: Breed? = nil, image: Image? = nil) {
        self.className = className
        self.color = color
        self.breed = breed
        self.image = image
    }

    public init(from decoder: Decoder) throws {
        let values = try decoder.container(keyedBy: StringCodingKey.self)
        self.className = try values.decode(String.self, forKey: "className")
        self.color = try values.decodeIfPresent(String.self, forKey: "color")
        self.breed = try values.decodeIfPresent(Breed.self, forKey: "breed")
        self.image = try values.decodeIfPresent(Image.self, forKey: "image")
    }

    public func encode(to encoder: Encoder) throws {
        var values = encoder.container(keyedBy: StringCodingKey.self)
        try values.encode(className, forKey: "className")
        try values.encodeIfPresent(color, forKey: "color")
        try values.encodeIfPresent(breed, forKey: "breed")
        try values.encodeIfPresent(image, forKey: "image")
    }
}
