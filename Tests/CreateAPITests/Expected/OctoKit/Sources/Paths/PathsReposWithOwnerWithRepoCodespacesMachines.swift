// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Repos.WithOwner.WithRepo.Codespaces {
    public var machines: Machines {
        Machines(path: path + "/machines")
    }

    public struct Machines {
        /// Path: `/repos/{owner}/{repo}/codespaces/machines`
        public let path: String

        /// List available machine types for a repository
        ///
        /// List the machine types available for a given repository based on its configuration.
        /// 
        /// Location is required.
        /// 
        /// You must authenticate using an access token with the `codespace` scope to use this endpoint.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/codespaces#list-available-machine-types-for-a-repository)
        public func get(location: String) -> Request<GetResponse> {
            Request(method: "GET", url: path, query: [("location", location)], id: "codespaces/repo-machines-for-authenticated-user")
        }

        public struct GetResponse: Decodable {
            public var totalCount: Int
            public var machines: [OctoKit.CodespaceMachine]

            public init(totalCount: Int, machines: [OctoKit.CodespaceMachine]) {
                self.totalCount = totalCount
                self.machines = machines
            }

            private enum CodingKeys: String, CodingKey {
                case totalCount = "total_count"
                case machines
            }
        }
    }
}
