// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Orgs.WithOrg.Teams.WithTeamSlug {
    public var externalGroups: ExternalGroups {
        ExternalGroups(path: path + "/external-groups")
    }

    public struct ExternalGroups {
        /// Path: `/orgs/{org}/teams/{team_slug}/external-groups`
        public let path: String

        /// Update the connection between an external group and a team
        ///
        /// Creates a connection between a team and an external group.  Only one external group can be linked to a team.
        /// 
        /// You can manage team membership with your identity provider using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see "[GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products)" in the GitHub Help documentation.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/teams#link-external-idp-group-team-connection)
        public func patch(groupID: Int) -> Request<OctoKit.ExternalGroup> {
            Request(method: "PATCH", url: path, body: ["group_id": groupID], id: "teams/link-external-idp-group-to-team-for-org")
        }

        /// Remove the connection between an external group and a team
        ///
        /// Deletes a connection between a team and an external group.
        /// 
        /// You can manage team membership with your IdP using Enterprise Managed Users for GitHub Enterprise Cloud. For more information, see [GitHub's products](https://docs.github.com/github/getting-started-with-github/githubs-products) in the GitHub Help documentation.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/teams#unlink-external-idp-group-team-connection)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "teams/unlink-external-idp-group-from-team-for-org")
        }
    }
}
