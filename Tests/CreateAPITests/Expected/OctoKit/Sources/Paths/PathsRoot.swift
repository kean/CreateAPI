// Generated by Create API
// https://github.com/CreateAPI/CreateAPI
//
// swiftlint:disable all

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths {
    public static var root: Root {
        Root(path: "/")
    }

    public struct Root {
        /// Path: `/`
        public let path: String

        /// GitHub API Root
        ///
        /// Get Hypermedia links to resources accessible in GitHub's REST API
        ///
        /// [API method documentation](https://docs.github.com/rest/overview/resources-in-the-rest-api#root-endpoint)
        public var get: Request<GetResponse> {
            Request(method: "GET", url: path, id: "meta/root")
        }

        public struct GetResponse: Decodable {
            public var currentUserURL: String
            public var currentUserAuthorizationsHTMLURL: String
            public var authorizationsURL: String
            public var codeSearchURL: String
            public var commitSearchURL: String
            public var emailsURL: String
            public var emojisURL: String
            public var eventsURL: String
            public var feedsURL: String
            public var followersURL: String
            public var followingURL: String
            public var gistsURL: String
            public var hubURL: String
            public var issueSearchURL: String
            public var issuesURL: String
            public var keysURL: String
            public var labelSearchURL: String
            public var notificationsURL: String
            public var organizationURL: String
            public var organizationRepositoriesURL: String
            public var organizationTeamsURL: String
            public var publicGistsURL: String
            public var rateLimitURL: String
            public var repositoryURL: String
            public var repositorySearchURL: String
            public var currentUserRepositoriesURL: String
            public var starredURL: String
            public var starredGistsURL: String
            public var topicSearchURL: String?
            public var userURL: String
            public var userOrganizationsURL: String
            public var userRepositoriesURL: String
            public var userSearchURL: String

            public init(currentUserURL: String, currentUserAuthorizationsHTMLURL: String, authorizationsURL: String, codeSearchURL: String, commitSearchURL: String, emailsURL: String, emojisURL: String, eventsURL: String, feedsURL: String, followersURL: String, followingURL: String, gistsURL: String, hubURL: String, issueSearchURL: String, issuesURL: String, keysURL: String, labelSearchURL: String, notificationsURL: String, organizationURL: String, organizationRepositoriesURL: String, organizationTeamsURL: String, publicGistsURL: String, rateLimitURL: String, repositoryURL: String, repositorySearchURL: String, currentUserRepositoriesURL: String, starredURL: String, starredGistsURL: String, topicSearchURL: String? = nil, userURL: String, userOrganizationsURL: String, userRepositoriesURL: String, userSearchURL: String) {
                self.currentUserURL = currentUserURL
                self.currentUserAuthorizationsHTMLURL = currentUserAuthorizationsHTMLURL
                self.authorizationsURL = authorizationsURL
                self.codeSearchURL = codeSearchURL
                self.commitSearchURL = commitSearchURL
                self.emailsURL = emailsURL
                self.emojisURL = emojisURL
                self.eventsURL = eventsURL
                self.feedsURL = feedsURL
                self.followersURL = followersURL
                self.followingURL = followingURL
                self.gistsURL = gistsURL
                self.hubURL = hubURL
                self.issueSearchURL = issueSearchURL
                self.issuesURL = issuesURL
                self.keysURL = keysURL
                self.labelSearchURL = labelSearchURL
                self.notificationsURL = notificationsURL
                self.organizationURL = organizationURL
                self.organizationRepositoriesURL = organizationRepositoriesURL
                self.organizationTeamsURL = organizationTeamsURL
                self.publicGistsURL = publicGistsURL
                self.rateLimitURL = rateLimitURL
                self.repositoryURL = repositoryURL
                self.repositorySearchURL = repositorySearchURL
                self.currentUserRepositoriesURL = currentUserRepositoriesURL
                self.starredURL = starredURL
                self.starredGistsURL = starredGistsURL
                self.topicSearchURL = topicSearchURL
                self.userURL = userURL
                self.userOrganizationsURL = userOrganizationsURL
                self.userRepositoriesURL = userRepositoriesURL
                self.userSearchURL = userSearchURL
            }

            private enum CodingKeys: String, CodingKey {
                case currentUserURL = "current_user_url"
                case currentUserAuthorizationsHTMLURL = "current_user_authorizations_html_url"
                case authorizationsURL = "authorizations_url"
                case codeSearchURL = "code_search_url"
                case commitSearchURL = "commit_search_url"
                case emailsURL = "emails_url"
                case emojisURL = "emojis_url"
                case eventsURL = "events_url"
                case feedsURL = "feeds_url"
                case followersURL = "followers_url"
                case followingURL = "following_url"
                case gistsURL = "gists_url"
                case hubURL = "hub_url"
                case issueSearchURL = "issue_search_url"
                case issuesURL = "issues_url"
                case keysURL = "keys_url"
                case labelSearchURL = "label_search_url"
                case notificationsURL = "notifications_url"
                case organizationURL = "organization_url"
                case organizationRepositoriesURL = "organization_repositories_url"
                case organizationTeamsURL = "organization_teams_url"
                case publicGistsURL = "public_gists_url"
                case rateLimitURL = "rate_limit_url"
                case repositoryURL = "repository_url"
                case repositorySearchURL = "repository_search_url"
                case currentUserRepositoriesURL = "current_user_repositories_url"
                case starredURL = "starred_url"
                case starredGistsURL = "starred_gists_url"
                case topicSearchURL = "topic_search_url"
                case userURL = "user_url"
                case userOrganizationsURL = "user_organizations_url"
                case userRepositoriesURL = "user_repositories_url"
                case userSearchURL = "user_search_url"
            }
        }
    }
}
