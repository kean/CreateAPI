// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import Get
import HTTPHeaders
import URLQueryEncoder

extension Paths.Scim.V2.Enterprises.WithEnterprise.Groups {
    public func scimGroupID(_ scimGroupID: String) -> WithScimGroupID {
        WithScimGroupID(path: "\(path)/\(scimGroupID)")
    }

    public struct WithScimGroupID {
        /// Path: `/scim/v2/enterprises/{enterprise}/Groups/{scim_group_id}`
        public let path: String

        /// Get SCIM provisioning information for an enterprise group
        ///
        /// **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/enterprise-admin#get-scim-provisioning-information-for-an-enterprise-group)
        public func get(excludedAttributes: String? = nil) -> Request<OctoKit.ScimEnterpriseGroup> {
            Request(method: "GET", url: path, query: makeGetQuery(excludedAttributes), id: "enterprise-admin/get-provisioning-information-for-enterprise-group")
        }

        private func makeGetQuery(_ excludedAttributes: String?) -> [(String, String?)] {
            let encoder = URLQueryEncoder()
            encoder.encode(excludedAttributes, forKey: "excludedAttributes")
            return encoder.items
        }

        /// Set SCIM information for a provisioned enterprise group
        ///
        /// **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
        /// 
        /// Replaces an existing provisioned group’s information. You must provide all the information required for the group as if you were provisioning it for the first time. Any existing group information that you don't provide will be removed, including group membership. If you want to only update a specific attribute, use the [Update an attribute for a SCIM enterprise group](#update-an-attribute-for-a-scim-enterprise-group) endpoint instead.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/enterprise-admin#set-scim-information-for-a-provisioned-enterprise-group)
        public func put(_ body: PutRequest) -> Request<OctoKit.ScimEnterpriseGroup> {
            Request(method: "PUT", url: path, body: body, id: "enterprise-admin/set-information-for-provisioned-enterprise-group")
        }

        public struct PutRequest: Encodable {
            /// The SCIM schema URIs.
            public var schemas: [String]
            /// The name of the SCIM group. This must match the GitHub organization that the group maps to.
            public var displayName: String
            public var members: [Member]?

            public struct Member: Encodable {
                /// The SCIM user ID for a user.
                public var value: String

                public init(value: String) {
                    self.value = value
                }

                public func encode(to encoder: Encoder) throws {
                    var values = encoder.container(keyedBy: StringCodingKey.self)
                    try values.encode(value, forKey: "value")
                }
            }

            public init(schemas: [String], displayName: String, members: [Member]? = nil) {
                self.schemas = schemas
                self.displayName = displayName
                self.members = members
            }

            public func encode(to encoder: Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encode(schemas, forKey: "schemas")
                try values.encode(displayName, forKey: "displayName")
                try values.encodeIfPresent(members, forKey: "members")
            }
        }

        /// Update an attribute for a SCIM enterprise group
        ///
        /// **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
        /// 
        /// Allows you to change a provisioned group’s individual attributes. To change a group’s values, you must provide a specific Operations JSON format that contains at least one of the add, remove, or replace operations. For examples and more information on the SCIM operations format, see the [SCIM specification](https://tools.ietf.org/html/rfc7644#section-3.5.2).
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/enterprise-admin#update-an-attribute-for-a-scim-enterprise-group)
        public func patch(_ body: PatchRequest) -> Request<OctoKit.ScimEnterpriseGroup> {
            Request(method: "PATCH", url: path, body: body, id: "enterprise-admin/update-attribute-for-enterprise-group")
        }

        public struct PatchRequest: Encodable {
            /// The SCIM schema URIs.
            public var schemas: [String]
            /// Array of [SCIM operations](https://tools.ietf.org/html/rfc7644#section-3.5.2).
            public var operations: [Operation]

            public struct Operation: Encodable {
                public var op: Op
                public var path: String?
                /// Can be any value - string, number, array or object.
                public var value: AnyJSON?

                public enum Op: String, Codable, CaseIterable {
                    case add
                    case add2 = "Add"
                    case remove
                    case remove2 = "Remove"
                    case replace
                    case replace2 = "Replace"
                }

                public init(op: Op, path: String? = nil, value: AnyJSON? = nil) {
                    self.op = op
                    self.path = path
                    self.value = value
                }

                public func encode(to encoder: Encoder) throws {
                    var values = encoder.container(keyedBy: StringCodingKey.self)
                    try values.encode(op, forKey: "op")
                    try values.encodeIfPresent(path, forKey: "path")
                    try values.encodeIfPresent(value, forKey: "value")
                }
            }

            public init(schemas: [String], operations: [Operation]) {
                self.schemas = schemas
                self.operations = operations
            }

            public func encode(to encoder: Encoder) throws {
                var values = encoder.container(keyedBy: StringCodingKey.self)
                try values.encode(schemas, forKey: "schemas")
                try values.encode(operations, forKey: "Operations")
            }
        }

        /// Delete a SCIM group from an enterprise
        ///
        /// **Note:** The SCIM API endpoints for enterprise accounts are currently in beta and are subject to change.
        ///
        /// [API method documentation](https://docs.github.com/rest/reference/enterprise-admin#delete-a-scim-group-from-an-enterprise)
        public var delete: Request<Void> {
            Request(method: "DELETE", url: path, id: "enterprise-admin/delete-scim-group-from-enterprise")
        }
    }
}
