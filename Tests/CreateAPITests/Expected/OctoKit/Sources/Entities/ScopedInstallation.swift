// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct ScopedInstallation: Codable {
    /// App Permissions
    ///
    /// The permissions granted to the user-to-server access token.
    ///
    /// Example:
    ///
    /// {
    ///   "contents" : "read",
    ///   "deployments" : "write",
    ///   "issues" : "read",
    ///   "single_file" : "read"
    /// }
    public var permissions: AppPermissions
    /// Describe whether all repositories have been selected or there's a selection involved
    public var repositorySelection: RepositorySelection
    /// Example: "config.yaml"
    public var singleFileName: String?
    /// Example: true
    public var hasMultipleSingleFiles: Bool?
    /// Example: ["config.yml", ".github/issue_TEMPLATE.md"]
    public var singleFilePaths: [String]?
    /// Example: "https://api.github.com/users/octocat/repos"
    public var repositoriesURL: URL
    /// Simple User
    public var account: SimpleUser

    /// Describe whether all repositories have been selected or there's a selection involved
    public enum RepositorySelection: String, Codable, CaseIterable {
        case all
        case selected
    }

    public init(permissions: AppPermissions, repositorySelection: RepositorySelection, singleFileName: String? = nil, hasMultipleSingleFiles: Bool? = nil, singleFilePaths: [String]? = nil, repositoriesURL: URL, account: SimpleUser) {
        self.permissions = permissions
        self.repositorySelection = repositorySelection
        self.singleFileName = singleFileName
        self.hasMultipleSingleFiles = hasMultipleSingleFiles
        self.singleFilePaths = singleFilePaths
        self.repositoriesURL = repositoriesURL
        self.account = account
    }

    private enum CodingKeys: String, CodingKey {
        case permissions
        case repositorySelection = "repository_selection"
        case singleFileName = "single_file_name"
        case hasMultipleSingleFiles = "has_multiple_single_files"
        case singleFilePaths = "single_file_paths"
        case repositoriesURL = "repositories_url"
        case account
    }
}
