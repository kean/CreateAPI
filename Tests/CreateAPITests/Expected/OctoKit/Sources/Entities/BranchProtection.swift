// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct BranchProtection: Codable {
    public var url: String?
    public var isEnabled: Bool?
    /// Protected Branch Required Status Check
    public var requiredStatusChecks: ProtectedBranchRequiredStatusCheck?
    /// Protected Branch Admin Enforced
    public var enforceAdmins: ProtectedBranchAdminEnforced?
    /// Protected Branch Pull Request Review
    public var requiredPullRequestReviews: ProtectedBranchPullRequestReview?
    /// Branch Restriction Policy
    public var restrictions: BranchRestrictionPolicy?
    public var requiredLinearHistory: RequiredLinearHistory?
    public var allowForcePushes: AllowForcePushes?
    public var allowDeletions: AllowDeletions?
    public var requiredConversationResolution: RequiredConversationResolution?
    /// Example: "branch/with/protection"
    public var name: String?
    /// Example: "https://api.github.com/repos/owner-79e94e2d36b3fd06a32bb213/AAA_Public_Repo/branches/branch/with/protection/protection"
    public var protectionURL: String?
    public var requiredSignatures: RequiredSignatures?

    public struct RequiredLinearHistory: Codable {
        public var isEnabled: Bool?

        public init(isEnabled: Bool? = nil) {
            self.isEnabled = isEnabled
        }

        private enum CodingKeys: String, CodingKey {
            case isEnabled = "enabled"
        }
    }

    public struct AllowForcePushes: Codable {
        public var isEnabled: Bool?

        public init(isEnabled: Bool? = nil) {
            self.isEnabled = isEnabled
        }

        private enum CodingKeys: String, CodingKey {
            case isEnabled = "enabled"
        }
    }

    public struct AllowDeletions: Codable {
        public var isEnabled: Bool?

        public init(isEnabled: Bool? = nil) {
            self.isEnabled = isEnabled
        }

        private enum CodingKeys: String, CodingKey {
            case isEnabled = "enabled"
        }
    }

    public struct RequiredConversationResolution: Codable {
        public var isEnabled: Bool?

        public init(isEnabled: Bool? = nil) {
            self.isEnabled = isEnabled
        }

        private enum CodingKeys: String, CodingKey {
            case isEnabled = "enabled"
        }
    }

    public struct RequiredSignatures: Codable {
        /// Example: "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/required_signatures"
        public var url: URL
        /// Example: true
        public var isEnabled: Bool

        public init(url: URL, isEnabled: Bool) {
            self.url = url
            self.isEnabled = isEnabled
        }

        private enum CodingKeys: String, CodingKey {
            case url
            case isEnabled = "enabled"
        }
    }

    public init(url: String? = nil, isEnabled: Bool? = nil, requiredStatusChecks: ProtectedBranchRequiredStatusCheck? = nil, enforceAdmins: ProtectedBranchAdminEnforced? = nil, requiredPullRequestReviews: ProtectedBranchPullRequestReview? = nil, restrictions: BranchRestrictionPolicy? = nil, requiredLinearHistory: RequiredLinearHistory? = nil, allowForcePushes: AllowForcePushes? = nil, allowDeletions: AllowDeletions? = nil, requiredConversationResolution: RequiredConversationResolution? = nil, name: String? = nil, protectionURL: String? = nil, requiredSignatures: RequiredSignatures? = nil) {
        self.url = url
        self.isEnabled = isEnabled
        self.requiredStatusChecks = requiredStatusChecks
        self.enforceAdmins = enforceAdmins
        self.requiredPullRequestReviews = requiredPullRequestReviews
        self.restrictions = restrictions
        self.requiredLinearHistory = requiredLinearHistory
        self.allowForcePushes = allowForcePushes
        self.allowDeletions = allowDeletions
        self.requiredConversationResolution = requiredConversationResolution
        self.name = name
        self.protectionURL = protectionURL
        self.requiredSignatures = requiredSignatures
    }

    private enum CodingKeys: String, CodingKey {
        case url
        case isEnabled = "enabled"
        case requiredStatusChecks = "required_status_checks"
        case enforceAdmins = "enforce_admins"
        case requiredPullRequestReviews = "required_pull_request_reviews"
        case restrictions
        case requiredLinearHistory = "required_linear_history"
        case allowForcePushes = "allow_force_pushes"
        case allowDeletions = "allow_deletions"
        case requiredConversationResolution = "required_conversation_resolution"
        case name
        case protectionURL = "protection_url"
        case requiredSignatures = "required_signatures"
    }
}
