// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct WorkflowUsage: Codable {
    public var billable: Billable

    public struct Billable: Codable {
        public var ubuntu: Ubuntu?
        public var macos: Macos?
        public var windows: Windows?

        public struct Ubuntu: Codable {
            public var totalMs: Int?

            public init(totalMs: Int? = nil) {
                self.totalMs = totalMs
            }

            private enum CodingKeys: String, CodingKey {
                case totalMs = "total_ms"
            }
        }

        public struct Macos: Codable {
            public var totalMs: Int?

            public init(totalMs: Int? = nil) {
                self.totalMs = totalMs
            }

            private enum CodingKeys: String, CodingKey {
                case totalMs = "total_ms"
            }
        }

        public struct Windows: Codable {
            public var totalMs: Int?

            public init(totalMs: Int? = nil) {
                self.totalMs = totalMs
            }

            private enum CodingKeys: String, CodingKey {
                case totalMs = "total_ms"
            }
        }

        public init(ubuntu: Ubuntu? = nil, macos: Macos? = nil, windows: Windows? = nil) {
            self.ubuntu = ubuntu
            self.macos = macos
            self.windows = windows
        }

        private enum CodingKeys: String, CodingKey {
            case ubuntu = "UBUNTU"
            case macos = "MACOS"
            case windows = "WINDOWS"
        }
    }

    public init(billable: Billable) {
        self.billable = billable
    }
}
