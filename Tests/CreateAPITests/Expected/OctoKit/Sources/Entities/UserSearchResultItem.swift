// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct UserSearchResultItem: Codable {
    public var login: String
    public var id: Int
    public var nodeID: String
    public var avatarURL: URL
    public var gravatarID: String?
    public var url: URL
    public var htmlURL: URL
    public var followersURL: URL
    public var subscriptionsURL: URL
    public var organizationsURL: URL
    public var reposURL: URL
    public var receivedEventsURL: URL
    public var type: String
    public var score: Double
    public var followingURL: String
    public var gistsURL: String
    public var starredURL: String
    public var eventsURL: String
    public var publicRepos: Int?
    public var publicGists: Int?
    public var followers: Int?
    public var following: Int?
    public var createdAt: Date?
    public var updatedAt: Date?
    public var name: String?
    public var bio: String?
    public var email: String?
    public var location: String?
    public var isSiteAdmin: Bool
    public var isHireable: Bool?
    /// Search Result Text Matches
    public var textMatches: [SearchResultTextMatch]?
    public var blog: String?
    public var company: String?
    public var suspendedAt: Date?

    public init(login: String, id: Int, nodeID: String, avatarURL: URL, gravatarID: String? = nil, url: URL, htmlURL: URL, followersURL: URL, subscriptionsURL: URL, organizationsURL: URL, reposURL: URL, receivedEventsURL: URL, type: String, score: Double, followingURL: String, gistsURL: String, starredURL: String, eventsURL: String, publicRepos: Int? = nil, publicGists: Int? = nil, followers: Int? = nil, following: Int? = nil, createdAt: Date? = nil, updatedAt: Date? = nil, name: String? = nil, bio: String? = nil, email: String? = nil, location: String? = nil, isSiteAdmin: Bool, isHireable: Bool? = nil, textMatches: [SearchResultTextMatch]? = nil, blog: String? = nil, company: String? = nil, suspendedAt: Date? = nil) {
        self.login = login
        self.id = id
        self.nodeID = nodeID
        self.avatarURL = avatarURL
        self.gravatarID = gravatarID
        self.url = url
        self.htmlURL = htmlURL
        self.followersURL = followersURL
        self.subscriptionsURL = subscriptionsURL
        self.organizationsURL = organizationsURL
        self.reposURL = reposURL
        self.receivedEventsURL = receivedEventsURL
        self.type = type
        self.score = score
        self.followingURL = followingURL
        self.gistsURL = gistsURL
        self.starredURL = starredURL
        self.eventsURL = eventsURL
        self.publicRepos = publicRepos
        self.publicGists = publicGists
        self.followers = followers
        self.following = following
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.name = name
        self.bio = bio
        self.email = email
        self.location = location
        self.isSiteAdmin = isSiteAdmin
        self.isHireable = isHireable
        self.textMatches = textMatches
        self.blog = blog
        self.company = company
        self.suspendedAt = suspendedAt
    }

    private enum CodingKeys: String, CodingKey {
        case login
        case id
        case nodeID = "node_id"
        case avatarURL = "avatar_url"
        case gravatarID = "gravatar_id"
        case url
        case htmlURL = "html_url"
        case followersURL = "followers_url"
        case subscriptionsURL = "subscriptions_url"
        case organizationsURL = "organizations_url"
        case reposURL = "repos_url"
        case receivedEventsURL = "received_events_url"
        case type
        case score
        case followingURL = "following_url"
        case gistsURL = "gists_url"
        case starredURL = "starred_url"
        case eventsURL = "events_url"
        case publicRepos = "public_repos"
        case publicGists = "public_gists"
        case followers
        case following
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case name
        case bio
        case email
        case location
        case isSiteAdmin = "site_admin"
        case isHireable = "hireable"
        case textMatches = "text_matches"
        case blog
        case company
        case suspendedAt = "suspended_at"
    }
}
