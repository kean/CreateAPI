// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct ActionsBillingUsage: Codable {
    /// The sum of the free and paid GitHub Actions minutes used.
    public var totalMinutesUsed: Int
    /// The total paid GitHub Actions minutes used.
    public var totalPaidMinutesUsed: Int
    /// The amount of free GitHub Actions minutes available.
    public var includedMinutes: Int
    public var minutesUsedBreakdown: MinutesUsedBreakdown

    public struct MinutesUsedBreakdown: Codable {
        /// Total minutes used on Ubuntu runner machines.
        public var ubuntu: Int?
        /// Total minutes used on macOS runner machines.
        public var macos: Int?
        /// Total minutes used on Windows runner machines.
        public var windows: Int?

        public init(ubuntu: Int? = nil, macos: Int? = nil, windows: Int? = nil) {
            self.ubuntu = ubuntu
            self.macos = macos
            self.windows = windows
        }

        private enum CodingKeys: String, CodingKey {
            case ubuntu = "UBUNTU"
            case macos = "MACOS"
            case windows = "WINDOWS"
        }
    }

    public init(totalMinutesUsed: Int, totalPaidMinutesUsed: Int, includedMinutes: Int, minutesUsedBreakdown: MinutesUsedBreakdown) {
        self.totalMinutesUsed = totalMinutesUsed
        self.totalPaidMinutesUsed = totalPaidMinutesUsed
        self.includedMinutes = includedMinutes
        self.minutesUsedBreakdown = minutesUsedBreakdown
    }

    private enum CodingKeys: String, CodingKey {
        case totalMinutesUsed = "total_minutes_used"
        case totalPaidMinutesUsed = "total_paid_minutes_used"
        case includedMinutes = "included_minutes"
        case minutesUsedBreakdown = "minutes_used_breakdown"
    }
}
