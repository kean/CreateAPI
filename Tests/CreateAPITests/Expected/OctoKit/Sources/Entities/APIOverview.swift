// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct APIOverview: Codable {
    /// Example: true
    public var isVerifiablePasswordAuthentication: Bool
    public var sshKeyFingerprints: SshKeyFingerprints?
    /// Example: ["127.0.0.1/32"]
    public var hooks: [String]?
    /// Example: ["127.0.0.1/32"]
    public var web: [String]?
    /// Example: ["127.0.0.1/32"]
    public var api: [String]?
    /// Example: ["127.0.0.1/32"]
    public var git: [String]?
    /// Example: ["13.65.0.0/16", "157.55.204.33/32", "2a01:111:f403:f90c::/62"]
    public var packages: [String]?
    /// Example: ["192.30.252.153/32", "192.30.252.154/32"]
    public var pages: [String]?
    /// Example: ["54.158.161.132", "54.226.70.38"]
    public var importer: [String]?
    /// Example: ["13.64.0.0/16", "13.65.0.0/16"]
    public var actions: [String]?
    /// Example: ["192.168.7.15/32", "192.168.7.16/32"]
    public var dependabot: [String]?

    public struct SshKeyFingerprints: Codable {
        public var sha256Rsa: String?
        public var sha256Dsa: String?
        public var sha256Ecdsa: String?
        public var sha256Ed25519: String?

        public init(sha256Rsa: String? = nil, sha256Dsa: String? = nil, sha256Ecdsa: String? = nil, sha256Ed25519: String? = nil) {
            self.sha256Rsa = sha256Rsa
            self.sha256Dsa = sha256Dsa
            self.sha256Ecdsa = sha256Ecdsa
            self.sha256Ed25519 = sha256Ed25519
        }

        private enum CodingKeys: String, CodingKey {
            case sha256Rsa = "SHA256_RSA"
            case sha256Dsa = "SHA256_DSA"
            case sha256Ecdsa = "SHA256_ECDSA"
            case sha256Ed25519 = "SHA256_ED25519"
        }
    }

    public init(isVerifiablePasswordAuthentication: Bool, sshKeyFingerprints: SshKeyFingerprints? = nil, hooks: [String]? = nil, web: [String]? = nil, api: [String]? = nil, git: [String]? = nil, packages: [String]? = nil, pages: [String]? = nil, importer: [String]? = nil, actions: [String]? = nil, dependabot: [String]? = nil) {
        self.isVerifiablePasswordAuthentication = isVerifiablePasswordAuthentication
        self.sshKeyFingerprints = sshKeyFingerprints
        self.hooks = hooks
        self.web = web
        self.api = api
        self.git = git
        self.packages = packages
        self.pages = pages
        self.importer = importer
        self.actions = actions
        self.dependabot = dependabot
    }

    private enum CodingKeys: String, CodingKey {
        case isVerifiablePasswordAuthentication = "verifiable_password_authentication"
        case sshKeyFingerprints = "ssh_key_fingerprints"
        case hooks
        case web
        case api
        case git
        case packages
        case pages
        case importer
        case actions
        case dependabot
    }
}
