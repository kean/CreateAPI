// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct RepoSearchResultItem: Codable {
    public var id: Int
    public var nodeID: String
    public var name: String
    public var fullName: String
    /// Simple User
    public var owner: SimpleUser?
    public var isPrivate: Bool
    public var htmlURL: URL
    public var description: String?
    public var isFork: Bool
    public var url: URL
    public var createdAt: Date
    public var updatedAt: Date
    public var pushedAt: Date
    public var homepage: URL?
    public var size: Int
    public var stargazersCount: Int
    public var watchersCount: Int
    public var language: String?
    public var forksCount: Int
    public var openIssuesCount: Int
    public var masterBranch: String?
    public var defaultBranch: String
    public var score: Double
    public var forksURL: URL
    public var keysURL: String
    public var collaboratorsURL: String
    public var teamsURL: URL
    public var hooksURL: URL
    public var issueEventsURL: String
    public var eventsURL: URL
    public var assigneesURL: String
    public var branchesURL: String
    public var tagsURL: URL
    public var blobsURL: String
    public var gitTagsURL: String
    public var gitRefsURL: String
    public var treesURL: String
    public var statusesURL: String
    public var languagesURL: URL
    public var stargazersURL: URL
    public var contributorsURL: URL
    public var subscribersURL: URL
    public var subscriptionURL: URL
    public var commitsURL: String
    public var gitCommitsURL: String
    public var commentsURL: String
    public var issueCommentURL: String
    public var contentsURL: String
    public var compareURL: String
    public var mergesURL: URL
    public var archiveURL: String
    public var downloadsURL: URL
    public var issuesURL: String
    public var pullsURL: String
    public var milestonesURL: String
    public var notificationsURL: String
    public var labelsURL: String
    public var releasesURL: String
    public var deploymentsURL: URL
    public var gitURL: String
    public var sshURL: String
    public var cloneURL: String
    public var svnURL: URL
    public var forks: Int
    public var openIssues: Int
    public var watchers: Int
    public var topics: [String]?
    public var mirrorURL: URL?
    public var hasIssues: Bool
    public var hasProjects: Bool
    public var hasPages: Bool
    public var hasWiki: Bool
    public var hasDownloads: Bool
    public var isArchived: Bool
    /// Returns whether or not this repository disabled.
    public var isDisabled: Bool
    /// The repository visibility: public, private, or internal.
    public var visibility: String?
    /// License Simple
    public var license: LicenseSimple?
    public var permissions: Permissions?
    /// Search Result Text Matches
    public var textMatches: [SearchResultTextMatch]?
    public var tempCloneToken: String?
    public var allowMergeCommit: Bool?
    public var allowSquashMerge: Bool?
    public var allowRebaseMerge: Bool?
    public var allowAutoMerge: Bool?
    public var deleteBranchOnMerge: Bool?
    public var allowForking: Bool?
    public var isTemplate: Bool?

    public struct Permissions: Codable {
        public var isAdmin: Bool
        public var isMaintain: Bool?
        public var isPush: Bool
        public var isTriage: Bool?
        public var isPull: Bool

        public init(isAdmin: Bool, isMaintain: Bool? = nil, isPush: Bool, isTriage: Bool? = nil, isPull: Bool) {
            self.isAdmin = isAdmin
            self.isMaintain = isMaintain
            self.isPush = isPush
            self.isTriage = isTriage
            self.isPull = isPull
        }

        private enum CodingKeys: String, CodingKey {
            case isAdmin = "admin"
            case isMaintain = "maintain"
            case isPush = "push"
            case isTriage = "triage"
            case isPull = "pull"
        }
    }

    public init(id: Int, nodeID: String, name: String, fullName: String, owner: SimpleUser? = nil, isPrivate: Bool, htmlURL: URL, description: String? = nil, isFork: Bool, url: URL, createdAt: Date, updatedAt: Date, pushedAt: Date, homepage: URL? = nil, size: Int, stargazersCount: Int, watchersCount: Int, language: String? = nil, forksCount: Int, openIssuesCount: Int, masterBranch: String? = nil, defaultBranch: String, score: Double, forksURL: URL, keysURL: String, collaboratorsURL: String, teamsURL: URL, hooksURL: URL, issueEventsURL: String, eventsURL: URL, assigneesURL: String, branchesURL: String, tagsURL: URL, blobsURL: String, gitTagsURL: String, gitRefsURL: String, treesURL: String, statusesURL: String, languagesURL: URL, stargazersURL: URL, contributorsURL: URL, subscribersURL: URL, subscriptionURL: URL, commitsURL: String, gitCommitsURL: String, commentsURL: String, issueCommentURL: String, contentsURL: String, compareURL: String, mergesURL: URL, archiveURL: String, downloadsURL: URL, issuesURL: String, pullsURL: String, milestonesURL: String, notificationsURL: String, labelsURL: String, releasesURL: String, deploymentsURL: URL, gitURL: String, sshURL: String, cloneURL: String, svnURL: URL, forks: Int, openIssues: Int, watchers: Int, topics: [String]? = nil, mirrorURL: URL? = nil, hasIssues: Bool, hasProjects: Bool, hasPages: Bool, hasWiki: Bool, hasDownloads: Bool, isArchived: Bool, isDisabled: Bool, visibility: String? = nil, license: LicenseSimple? = nil, permissions: Permissions? = nil, textMatches: [SearchResultTextMatch]? = nil, tempCloneToken: String? = nil, allowMergeCommit: Bool? = nil, allowSquashMerge: Bool? = nil, allowRebaseMerge: Bool? = nil, allowAutoMerge: Bool? = nil, deleteBranchOnMerge: Bool? = nil, allowForking: Bool? = nil, isTemplate: Bool? = nil) {
        self.id = id
        self.nodeID = nodeID
        self.name = name
        self.fullName = fullName
        self.owner = owner
        self.isPrivate = isPrivate
        self.htmlURL = htmlURL
        self.description = description
        self.isFork = isFork
        self.url = url
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.pushedAt = pushedAt
        self.homepage = homepage
        self.size = size
        self.stargazersCount = stargazersCount
        self.watchersCount = watchersCount
        self.language = language
        self.forksCount = forksCount
        self.openIssuesCount = openIssuesCount
        self.masterBranch = masterBranch
        self.defaultBranch = defaultBranch
        self.score = score
        self.forksURL = forksURL
        self.keysURL = keysURL
        self.collaboratorsURL = collaboratorsURL
        self.teamsURL = teamsURL
        self.hooksURL = hooksURL
        self.issueEventsURL = issueEventsURL
        self.eventsURL = eventsURL
        self.assigneesURL = assigneesURL
        self.branchesURL = branchesURL
        self.tagsURL = tagsURL
        self.blobsURL = blobsURL
        self.gitTagsURL = gitTagsURL
        self.gitRefsURL = gitRefsURL
        self.treesURL = treesURL
        self.statusesURL = statusesURL
        self.languagesURL = languagesURL
        self.stargazersURL = stargazersURL
        self.contributorsURL = contributorsURL
        self.subscribersURL = subscribersURL
        self.subscriptionURL = subscriptionURL
        self.commitsURL = commitsURL
        self.gitCommitsURL = gitCommitsURL
        self.commentsURL = commentsURL
        self.issueCommentURL = issueCommentURL
        self.contentsURL = contentsURL
        self.compareURL = compareURL
        self.mergesURL = mergesURL
        self.archiveURL = archiveURL
        self.downloadsURL = downloadsURL
        self.issuesURL = issuesURL
        self.pullsURL = pullsURL
        self.milestonesURL = milestonesURL
        self.notificationsURL = notificationsURL
        self.labelsURL = labelsURL
        self.releasesURL = releasesURL
        self.deploymentsURL = deploymentsURL
        self.gitURL = gitURL
        self.sshURL = sshURL
        self.cloneURL = cloneURL
        self.svnURL = svnURL
        self.forks = forks
        self.openIssues = openIssues
        self.watchers = watchers
        self.topics = topics
        self.mirrorURL = mirrorURL
        self.hasIssues = hasIssues
        self.hasProjects = hasProjects
        self.hasPages = hasPages
        self.hasWiki = hasWiki
        self.hasDownloads = hasDownloads
        self.isArchived = isArchived
        self.isDisabled = isDisabled
        self.visibility = visibility
        self.license = license
        self.permissions = permissions
        self.textMatches = textMatches
        self.tempCloneToken = tempCloneToken
        self.allowMergeCommit = allowMergeCommit
        self.allowSquashMerge = allowSquashMerge
        self.allowRebaseMerge = allowRebaseMerge
        self.allowAutoMerge = allowAutoMerge
        self.deleteBranchOnMerge = deleteBranchOnMerge
        self.allowForking = allowForking
        self.isTemplate = isTemplate
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case nodeID = "node_id"
        case name
        case fullName = "full_name"
        case owner
        case isPrivate = "private"
        case htmlURL = "html_url"
        case description
        case isFork = "fork"
        case url
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case pushedAt = "pushed_at"
        case homepage
        case size
        case stargazersCount = "stargazers_count"
        case watchersCount = "watchers_count"
        case language
        case forksCount = "forks_count"
        case openIssuesCount = "open_issues_count"
        case masterBranch = "master_branch"
        case defaultBranch = "default_branch"
        case score
        case forksURL = "forks_url"
        case keysURL = "keys_url"
        case collaboratorsURL = "collaborators_url"
        case teamsURL = "teams_url"
        case hooksURL = "hooks_url"
        case issueEventsURL = "issue_events_url"
        case eventsURL = "events_url"
        case assigneesURL = "assignees_url"
        case branchesURL = "branches_url"
        case tagsURL = "tags_url"
        case blobsURL = "blobs_url"
        case gitTagsURL = "git_tags_url"
        case gitRefsURL = "git_refs_url"
        case treesURL = "trees_url"
        case statusesURL = "statuses_url"
        case languagesURL = "languages_url"
        case stargazersURL = "stargazers_url"
        case contributorsURL = "contributors_url"
        case subscribersURL = "subscribers_url"
        case subscriptionURL = "subscription_url"
        case commitsURL = "commits_url"
        case gitCommitsURL = "git_commits_url"
        case commentsURL = "comments_url"
        case issueCommentURL = "issue_comment_url"
        case contentsURL = "contents_url"
        case compareURL = "compare_url"
        case mergesURL = "merges_url"
        case archiveURL = "archive_url"
        case downloadsURL = "downloads_url"
        case issuesURL = "issues_url"
        case pullsURL = "pulls_url"
        case milestonesURL = "milestones_url"
        case notificationsURL = "notifications_url"
        case labelsURL = "labels_url"
        case releasesURL = "releases_url"
        case deploymentsURL = "deployments_url"
        case gitURL = "git_url"
        case sshURL = "ssh_url"
        case cloneURL = "clone_url"
        case svnURL = "svn_url"
        case forks
        case openIssues = "open_issues"
        case watchers
        case topics
        case mirrorURL = "mirror_url"
        case hasIssues = "has_issues"
        case hasProjects = "has_projects"
        case hasPages = "has_pages"
        case hasWiki = "has_wiki"
        case hasDownloads = "has_downloads"
        case isArchived = "archived"
        case isDisabled = "disabled"
        case visibility
        case license
        case permissions
        case textMatches = "text_matches"
        case tempCloneToken = "temp_clone_token"
        case allowMergeCommit = "allow_merge_commit"
        case allowSquashMerge = "allow_squash_merge"
        case allowRebaseMerge = "allow_rebase_merge"
        case allowAutoMerge = "allow_auto_merge"
        case deleteBranchOnMerge = "delete_branch_on_merge"
        case allowForking = "allow_forking"
        case isTemplate = "is_template"
    }
}
