// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Information about an external group's usage and its members
public struct ExternalGroup: Codable {
    /// The internal ID of the group
    public var groupID: Int
    /// The display name for the group
    ///
    /// Example: "group-azuread-test"
    public var groupName: String
    /// The date when the group was last updated_at
    ///
    /// Example: "2021-01-03 22:27:15:000 -700"
    public var updatedAt: String?
    /// An array of teams linked to this group
    ///
    /// Example:
    ///
    /// [
    ///   {
    ///     "team_id" : 1,
    ///     "team_name" : "team-test"
    ///   },
    ///   {
    ///     "team_id" : 2,
    ///     "team_name" : "team-test2"
    ///   }
    /// ]
    public var teams: [Team]
    /// An array of external members linked to this group
    ///
    /// Example:
    ///
    /// [
    ///   {
    ///     "member_email" : "mona_lisa@github.com",
    ///     "member_id" : 1,
    ///     "member_login" : "mona-lisa_eocsaxrs",
    ///     "member_name" : "Mona Lisa"
    ///   },
    ///   {
    ///     "member_email" : "octo_lisa@github.com",
    ///     "member_id" : 2,
    ///     "member_login" : "octo-lisa_eocsaxrs",
    ///     "member_name" : "Octo Lisa"
    ///   }
    /// ]
    public var members: [Member]

    public struct Team: Codable {
        /// The id for a team
        public var teamID: Int
        /// The name of the team
        ///
        /// Example: "team-test"
        public var teamName: String

        public init(teamID: Int, teamName: String) {
            self.teamID = teamID
            self.teamName = teamName
        }

        private enum CodingKeys: String, CodingKey {
            case teamID = "team_id"
            case teamName = "team_name"
        }
    }

    public struct Member: Codable {
        /// The internal user ID of the identity
        public var memberID: Int
        /// The handle/login for the user
        ///
        /// Example: "mona-lisa_eocsaxrs"
        public var memberLogin: String
        /// The user display name/profile name
        ///
        /// Example: "Mona Lisa"
        public var memberName: String
        /// An email attached to a user
        ///
        /// Example: "mona_lisa@github.com"
        public var memberEmail: String

        public init(memberID: Int, memberLogin: String, memberName: String, memberEmail: String) {
            self.memberID = memberID
            self.memberLogin = memberLogin
            self.memberName = memberName
            self.memberEmail = memberEmail
        }

        private enum CodingKeys: String, CodingKey {
            case memberID = "member_id"
            case memberLogin = "member_login"
            case memberName = "member_name"
            case memberEmail = "member_email"
        }
    }

    public init(groupID: Int, groupName: String, updatedAt: String? = nil, teams: [Team], members: [Member]) {
        self.groupID = groupID
        self.groupName = groupName
        self.updatedAt = updatedAt
        self.teams = teams
        self.members = members
    }

    private enum CodingKeys: String, CodingKey {
        case groupID = "group_id"
        case groupName = "group_name"
        case updatedAt = "updated_at"
        case teams
        case members
    }
}
