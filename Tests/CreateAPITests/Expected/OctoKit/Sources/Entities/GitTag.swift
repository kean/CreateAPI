// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Metadata for a Git tag
public struct GitTag: Codable {
    /// Example: "MDM6VGFnOTQwYmQzMzYyNDhlZmFlMGY5ZWU1YmM3YjJkNWM5ODU4ODdiMTZhYw=="
    public var nodeID: String
    /// Name of the tag
    ///
    /// Example: "v0.0.1"
    public var tag: String
    /// Example: "940bd336248efae0f9ee5bc7b2d5c985887b16ac"
    public var sha: String
    /// URL for the tag
    ///
    /// Example: "https://api.github.com/repositories/42/git/tags/940bd336248efae0f9ee5bc7b2d5c985887b16ac"
    public var url: URL
    /// Message describing the purpose of the tag
    ///
    /// Example: "Initial public release"
    public var message: String
    public var tagger: Tagger
    public var object: Object
    public var verification: Verification?

    public struct Tagger: Codable {
        public var date: String
        public var email: String
        public var name: String

        public init(date: String, email: String, name: String) {
            self.date = date
            self.email = email
            self.name = name
        }
    }

    public struct Object: Codable {
        public var sha: String
        public var type: String
        public var url: URL

        public init(sha: String, type: String, url: URL) {
            self.sha = sha
            self.type = type
            self.url = url
        }
    }

    public init(nodeID: String, tag: String, sha: String, url: URL, message: String, tagger: Tagger, object: Object, verification: Verification? = nil) {
        self.nodeID = nodeID
        self.tag = tag
        self.sha = sha
        self.url = url
        self.message = message
        self.tagger = tagger
        self.object = object
        self.verification = verification
    }

    private enum CodingKeys: String, CodingKey {
        case nodeID = "node_id"
        case tag
        case sha
        case url
        case message
        case tagger
        case object
        case verification
    }
}
