// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// The status of a deployment.
public struct DeploymentStatus: Codable {
    /// Example: "https://api.github.com/repos/octocat/example/deployments/42/statuses/1"
    public var url: URL
    public var id: Int
    /// Example: "MDE2OkRlcGxveW1lbnRTdGF0dXMx"
    public var nodeID: String
    /// The state of the status.
    ///
    /// Example: "success"
    public var state: State
    /// Simple User
    public var creator: SimpleUser?
    /// A short description of the status.
    ///
    /// Example: "Deployment finished successfully."
    public var description: String
    /// The environment of the deployment that the status is for.
    ///
    /// Example: "production"
    public var environment: String?
    /// Deprecated: the URL to associate with this status.
    ///
    /// Example: "https://example.com/deployment/42/output"
    public var targetURL: URL
    /// Example: "2012-07-20T01:19:13Z"
    public var createdAt: Date
    /// Example: "2012-07-20T01:19:13Z"
    public var updatedAt: Date
    /// Example: "https://api.github.com/repos/octocat/example/deployments/42"
    public var deploymentURL: URL
    /// Example: "https://api.github.com/repos/octocat/example"
    public var repositoryURL: URL
    /// The URL for accessing your environment.
    ///
    /// Example: "https://staging.example.com/"
    public var environmentURL: URL?
    /// The URL to associate with this status.
    ///
    /// Example: "https://example.com/deployment/42/output"
    public var logURL: URL?
    /// GitHub app
    ///
    /// GitHub apps are a new way to extend GitHub. They can be installed directly on organizations and user accounts and granted access to specific repositories. They come with granular permissions and built-in webhooks. GitHub apps are first class actors within GitHub.
    public var performedViaGithubApp: Integration?

    /// The state of the status.
    ///
    /// Example: "success"
    public enum State: String, Codable, CaseIterable {
        case error
        case failure
        case inactive
        case pending
        case success
        case queued
        case inProgress = "in_progress"
    }

    public init(url: URL, id: Int, nodeID: String, state: State, creator: SimpleUser? = nil, description: String, environment: String? = nil, targetURL: URL, createdAt: Date, updatedAt: Date, deploymentURL: URL, repositoryURL: URL, environmentURL: URL? = nil, logURL: URL? = nil, performedViaGithubApp: Integration? = nil) {
        self.url = url
        self.id = id
        self.nodeID = nodeID
        self.state = state
        self.creator = creator
        self.description = description
        self.environment = environment
        self.targetURL = targetURL
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.deploymentURL = deploymentURL
        self.repositoryURL = repositoryURL
        self.environmentURL = environmentURL
        self.logURL = logURL
        self.performedViaGithubApp = performedViaGithubApp
    }

    private enum CodingKeys: String, CodingKey {
        case url
        case id
        case nodeID = "node_id"
        case state
        case creator
        case description
        case environment
        case targetURL = "target_url"
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case deploymentURL = "deployment_url"
        case repositoryURL = "repository_url"
        case environmentURL = "environment_url"
        case logURL = "log_url"
        case performedViaGithubApp = "performed_via_github_app"
    }
}
