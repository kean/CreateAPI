// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// The authorization for an OAuth app, GitHub App, or a Personal Access Token.
public struct Authorization: Codable {
    public var id: Int
    public var url: URL
    /// A list of scopes that this authorization is in.
    public var scopes: [String]?
    public var token: String
    public var tokenLastEight: String?
    public var hashedToken: String?
    public var app: App
    public var note: String?
    public var noteURL: URL?
    public var updatedAt: Date
    public var createdAt: Date
    public var fingerprint: String?
    /// Simple User
    public var user: SimpleUser?
    /// Scoped Installation
    public var installation: ScopedInstallation?
    public var expiresAt: Date?

    public struct App: Codable {
        public var clientID: String
        public var name: String
        public var url: URL

        public init(clientID: String, name: String, url: URL) {
            self.clientID = clientID
            self.name = name
            self.url = url
        }

        private enum CodingKeys: String, CodingKey {
            case clientID = "client_id"
            case name
            case url
        }
    }

    public init(id: Int, url: URL, scopes: [String]? = nil, token: String, tokenLastEight: String? = nil, hashedToken: String? = nil, app: App, note: String? = nil, noteURL: URL? = nil, updatedAt: Date, createdAt: Date, fingerprint: String? = nil, user: SimpleUser? = nil, installation: ScopedInstallation? = nil, expiresAt: Date? = nil) {
        self.id = id
        self.url = url
        self.scopes = scopes
        self.token = token
        self.tokenLastEight = tokenLastEight
        self.hashedToken = hashedToken
        self.app = app
        self.note = note
        self.noteURL = noteURL
        self.updatedAt = updatedAt
        self.createdAt = createdAt
        self.fingerprint = fingerprint
        self.user = user
        self.installation = installation
        self.expiresAt = expiresAt
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case url
        case scopes
        case token
        case tokenLastEight = "token_last_eight"
        case hashedToken = "hashed_token"
        case app
        case note
        case noteURL = "note_url"
        case updatedAt = "updated_at"
        case createdAt = "created_at"
        case fingerprint
        case user
        case installation
        case expiresAt = "expires_at"
    }
}
