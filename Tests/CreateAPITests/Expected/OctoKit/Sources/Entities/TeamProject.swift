// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// A team's access to a project.
public struct TeamProject: Codable {
    public var ownerURL: String
    public var url: String
    public var htmlURL: String
    public var columnsURL: String
    public var id: Int
    public var nodeID: String
    public var name: String
    public var body: String?
    public var number: Int
    public var state: String
    /// Simple User
    public var creator: SimpleUser
    public var createdAt: String
    public var updatedAt: String
    /// The organization permission for this project. Only present when owner is an organization.
    public var organizationPermission: String?
    /// Whether the project is private or not. Only present when owner is an organization.
    public var isPrivate: Bool?
    public var permissions: Permissions

    public struct Permissions: Codable {
        public var isRead: Bool
        public var isWrite: Bool
        public var isAdmin: Bool

        public init(isRead: Bool, isWrite: Bool, isAdmin: Bool) {
            self.isRead = isRead
            self.isWrite = isWrite
            self.isAdmin = isAdmin
        }

        private enum CodingKeys: String, CodingKey {
            case isRead = "read"
            case isWrite = "write"
            case isAdmin = "admin"
        }
    }

    public init(ownerURL: String, url: String, htmlURL: String, columnsURL: String, id: Int, nodeID: String, name: String, body: String? = nil, number: Int, state: String, creator: SimpleUser, createdAt: String, updatedAt: String, organizationPermission: String? = nil, isPrivate: Bool? = nil, permissions: Permissions) {
        self.ownerURL = ownerURL
        self.url = url
        self.htmlURL = htmlURL
        self.columnsURL = columnsURL
        self.id = id
        self.nodeID = nodeID
        self.name = name
        self.body = body
        self.number = number
        self.state = state
        self.creator = creator
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.organizationPermission = organizationPermission
        self.isPrivate = isPrivate
        self.permissions = permissions
    }

    private enum CodingKeys: String, CodingKey {
        case ownerURL = "owner_url"
        case url
        case htmlURL = "html_url"
        case columnsURL = "columns_url"
        case id
        case nodeID = "node_id"
        case name
        case body
        case number
        case state
        case creator
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case organizationPermission = "organization_permission"
        case isPrivate = "private"
        case permissions
    }
}
