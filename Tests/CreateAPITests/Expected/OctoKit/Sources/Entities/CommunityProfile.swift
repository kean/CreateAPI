// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct CommunityProfile: Codable {
    /// Example: 100
    public var healthPercentage: Int
    /// Example: "My first repository on GitHub!"
    public var description: String?
    /// Example: "example.com"
    public var documentation: String?
    public var files: Files
    /// Example: "2017-02-28T19:09:29Z"
    public var updatedAt: Date?
    /// Example: true
    public var isContentReportsEnabled: Bool?

    public struct Files: Codable {
        /// Code Of Conduct Simple
        ///
        /// Code of Conduct Simple
        public var codeOfConduct: CodeOfConductSimple?
        /// Community Health File
        public var codeOfConductFile: CommunityHealthFile?
        /// License Simple
        public var license: LicenseSimple?
        /// Community Health File
        public var contributing: CommunityHealthFile?
        /// Community Health File
        public var readme: CommunityHealthFile?
        /// Community Health File
        public var issueTemplate: CommunityHealthFile?
        /// Community Health File
        public var pullRequestTemplate: CommunityHealthFile?

        public init(codeOfConduct: CodeOfConductSimple? = nil, codeOfConductFile: CommunityHealthFile? = nil, license: LicenseSimple? = nil, contributing: CommunityHealthFile? = nil, readme: CommunityHealthFile? = nil, issueTemplate: CommunityHealthFile? = nil, pullRequestTemplate: CommunityHealthFile? = nil) {
            self.codeOfConduct = codeOfConduct
            self.codeOfConductFile = codeOfConductFile
            self.license = license
            self.contributing = contributing
            self.readme = readme
            self.issueTemplate = issueTemplate
            self.pullRequestTemplate = pullRequestTemplate
        }

        private enum CodingKeys: String, CodingKey {
            case codeOfConduct = "code_of_conduct"
            case codeOfConductFile = "code_of_conduct_file"
            case license
            case contributing
            case readme
            case issueTemplate = "issue_template"
            case pullRequestTemplate = "pull_request_template"
        }
    }

    public init(healthPercentage: Int, description: String? = nil, documentation: String? = nil, files: Files, updatedAt: Date? = nil, isContentReportsEnabled: Bool? = nil) {
        self.healthPercentage = healthPercentage
        self.description = description
        self.documentation = documentation
        self.files = files
        self.updatedAt = updatedAt
        self.isContentReportsEnabled = isContentReportsEnabled
    }

    private enum CodingKeys: String, CodingKey {
        case healthPercentage = "health_percentage"
        case description
        case documentation
        case files
        case updatedAt = "updated_at"
        case isContentReportsEnabled = "content_reports_enabled"
    }
}
