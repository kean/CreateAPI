// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Groups of organization members that gives permissions on specified repositories.
public struct TeamSimple: Codable {
    /// Unique identifier of the team
    public var id: Int
    /// Example: "MDQ6VGVhbTE="
    public var nodeID: String
    /// URL for the team
    ///
    /// Example: "https://api.github.com/organizations/1/team/1"
    public var url: URL
    /// Example: "https://api.github.com/organizations/1/team/1/members{/member}"
    public var membersURL: String
    /// Name of the team
    ///
    /// Example: "Justice League"
    public var name: String
    /// Description of the team
    ///
    /// Example: "A great team."
    public var description: String?
    /// Permission that the team will have for its repositories
    ///
    /// Example: "admin"
    public var permission: String
    /// The level of privacy this team should have
    ///
    /// Example: "closed"
    public var privacy: String?
    /// Example: "https://github.com/orgs/rails/teams/core"
    public var htmlURL: URL
    /// Example: "https://api.github.com/organizations/1/team/1/repos"
    public var repositoriesURL: URL
    /// Example: "justice-league"
    public var slug: String
    /// Distinguished Name (DN) that team maps to within LDAP environment
    ///
    /// Example: "uid=example,ou=users,dc=github,dc=com"
    public var ldapDn: String?

    public init(id: Int, nodeID: String, url: URL, membersURL: String, name: String, description: String? = nil, permission: String, privacy: String? = nil, htmlURL: URL, repositoriesURL: URL, slug: String, ldapDn: String? = nil) {
        self.id = id
        self.nodeID = nodeID
        self.url = url
        self.membersURL = membersURL
        self.name = name
        self.description = description
        self.permission = permission
        self.privacy = privacy
        self.htmlURL = htmlURL
        self.repositoriesURL = repositoriesURL
        self.slug = slug
        self.ldapDn = ldapDn
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case nodeID = "node_id"
        case url
        case membersURL = "members_url"
        case name
        case description
        case permission
        case privacy
        case htmlURL = "html_url"
        case repositoriesURL = "repositories_url"
        case slug
        case ldapDn = "ldap_dn"
    }
}
