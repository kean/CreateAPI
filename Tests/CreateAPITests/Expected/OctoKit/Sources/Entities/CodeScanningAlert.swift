// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct CodeScanningAlert: Codable {
    /// The security alert number.
    public var number: Int
    /// The time that the alert was created in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    public var createdAt: Date
    /// The time that the alert was last updated in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    public var updatedAt: Date?
    /// The REST API URL of the alert resource.
    public var url: URL
    /// The GitHub URL of the alert resource.
    public var htmlURL: URL
    /// The REST API URL for fetching the list of instances for an alert.
    public var instancesURL: URL
    /// State of a code scanning alert.
    public var state: CodeScanningAlertState
    /// The time that the alert was no longer detected and was considered fixed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    public var fixedAt: Date?
    /// Simple User
    public var dismissedBy: SimpleUser?
    /// The time that the alert was dismissed in ISO 8601 format: `YYYY-MM-DDTHH:MM:SSZ`.
    public var dismissedAt: Date?
    /// **Required when the state is dismissed.** The reason for dismissing or closing the alert. Can be one of: `false positive`, `won't fix`, and `used in tests`.
    public var dismissedReason: CodeScanningAlertDismissedReason?
    public var rule: CodeScanningAlertRule
    public var tool: CodeScanningAnalysisTool
    public var mostRecentInstance: CodeScanningAlertInstance

    public init(number: Int, createdAt: Date, updatedAt: Date? = nil, url: URL, htmlURL: URL, instancesURL: URL, state: CodeScanningAlertState, fixedAt: Date? = nil, dismissedBy: SimpleUser? = nil, dismissedAt: Date? = nil, dismissedReason: CodeScanningAlertDismissedReason? = nil, rule: CodeScanningAlertRule, tool: CodeScanningAnalysisTool, mostRecentInstance: CodeScanningAlertInstance) {
        self.number = number
        self.createdAt = createdAt
        self.updatedAt = updatedAt
        self.url = url
        self.htmlURL = htmlURL
        self.instancesURL = instancesURL
        self.state = state
        self.fixedAt = fixedAt
        self.dismissedBy = dismissedBy
        self.dismissedAt = dismissedAt
        self.dismissedReason = dismissedReason
        self.rule = rule
        self.tool = tool
        self.mostRecentInstance = mostRecentInstance
    }

    private enum CodingKeys: String, CodingKey {
        case number
        case createdAt = "created_at"
        case updatedAt = "updated_at"
        case url
        case htmlURL = "html_url"
        case instancesURL = "instances_url"
        case state
        case fixedAt = "fixed_at"
        case dismissedBy = "dismissed_by"
        case dismissedAt = "dismissed_at"
        case dismissedReason = "dismissed_reason"
        case rule
        case tool
        case mostRecentInstance = "most_recent_instance"
    }
}
