// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// A software package
public struct Package: Codable {
    /// Unique identifier of the package.
    public var id: Int
    /// The name of the package.
    ///
    /// Example: "super-linter"
    public var name: String
    /// Example: "docker"
    public var packageType: PackageType
    /// Example: "https://api.github.com/orgs/github/packages/container/super-linter"
    public var url: String
    /// Example: "https://github.com/orgs/github/packages/container/package/super-linter"
    public var htmlURL: String
    /// The number of versions of the package.
    public var versionCount: Int
    /// Example: "private"
    public var visibility: Visibility
    /// Simple User
    public var owner: SimpleUser?
    /// Minimal Repository
    public var repository: MinimalRepository?
    public var createdAt: Date
    public var updatedAt: Date

    /// Example: "docker"
    public enum PackageType: String, Codable, CaseIterable {
        case npm
        case maven
        case rubygems
        case docker
        case nuget
        case container
    }

    /// Example: "private"
    public enum Visibility: String, Codable, CaseIterable {
        case `private`
        case `public`
    }

    public init(id: Int, name: String, packageType: PackageType, url: String, htmlURL: String, versionCount: Int, visibility: Visibility, owner: SimpleUser? = nil, repository: MinimalRepository? = nil, createdAt: Date, updatedAt: Date) {
        self.id = id
        self.name = name
        self.packageType = packageType
        self.url = url
        self.htmlURL = htmlURL
        self.versionCount = versionCount
        self.visibility = visibility
        self.owner = owner
        self.repository = repository
        self.createdAt = createdAt
        self.updatedAt = updatedAt
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case name
        case packageType = "package_type"
        case url
        case htmlURL = "html_url"
        case versionCount = "version_count"
        case visibility
        case owner
        case repository
        case createdAt = "created_at"
        case updatedAt = "updated_at"
    }
}
