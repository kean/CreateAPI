// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct SimpleCommit: Codable {
    public var id: String
    public var treeID: String
    public var message: String
    public var timestamp: Date
    public var author: Author?
    public var committer: Committer?

    public struct Author: Codable {
        public var name: String
        public var email: String

        public init(name: String, email: String) {
            self.name = name
            self.email = email
        }
    }

    public struct Committer: Codable {
        public var name: String
        public var email: String

        public init(name: String, email: String) {
            self.name = name
            self.email = email
        }
    }

    public init(id: String, treeID: String, message: String, timestamp: Date, author: Author? = nil, committer: Committer? = nil) {
        self.id = id
        self.treeID = treeID
        self.message = message
        self.timestamp = timestamp
        self.author = author
        self.committer = committer
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case treeID = "tree_id"
        case message
        case timestamp
        case author
        case committer
    }
}
