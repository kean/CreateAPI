// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

public struct ProtectedBranchPullRequestReview: Codable {
    /// Example: "https://api.github.com/repos/octocat/Hello-World/branches/master/protection/dismissal_restrictions"
    public var url: URL?
    public var dismissalRestrictions: DismissalRestrictions?
    /// Example: true
    public var dismissStaleReviews: Bool
    /// Example: true
    public var requireCodeOwnerReviews: Bool
    public var requiredApprovingReviewCount: Int?

    public struct DismissalRestrictions: Codable {
        /// The list of users with review dismissal access.
        public var users: [SimpleUser]?
        /// The list of teams with review dismissal access.
        public var teams: [Team]?
        /// Example: "https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions"
        public var url: String?
        /// Example: "https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/users"
        public var usersURL: String?
        /// Example: "https://api.github.com/repos/the-org/an-org-repo/branches/master/protection/dismissal_restrictions/teams"
        public var teamsURL: String?

        public init(users: [SimpleUser]? = nil, teams: [Team]? = nil, url: String? = nil, usersURL: String? = nil, teamsURL: String? = nil) {
            self.users = users
            self.teams = teams
            self.url = url
            self.usersURL = usersURL
            self.teamsURL = teamsURL
        }

        private enum CodingKeys: String, CodingKey {
            case users
            case teams
            case url
            case usersURL = "users_url"
            case teamsURL = "teams_url"
        }
    }

    public init(url: URL? = nil, dismissalRestrictions: DismissalRestrictions? = nil, dismissStaleReviews: Bool, requireCodeOwnerReviews: Bool, requiredApprovingReviewCount: Int? = nil) {
        self.url = url
        self.dismissalRestrictions = dismissalRestrictions
        self.dismissStaleReviews = dismissStaleReviews
        self.requireCodeOwnerReviews = requireCodeOwnerReviews
        self.requiredApprovingReviewCount = requiredApprovingReviewCount
    }

    private enum CodingKeys: String, CodingKey {
        case url
        case dismissalRestrictions = "dismissal_restrictions"
        case dismissStaleReviews = "dismiss_stale_reviews"
        case requireCodeOwnerReviews = "require_code_owner_reviews"
        case requiredApprovingReviewCount = "required_approving_review_count"
    }
}
