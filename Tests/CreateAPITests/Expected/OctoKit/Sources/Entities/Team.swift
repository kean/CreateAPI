// Generated by Create API
// https://github.com/CreateAPI/CreateAPI

import Foundation
import NaiveDate

/// Groups of organization members that gives permissions on specified repositories.
public struct Team: Codable {
    public var id: Int
    public var nodeID: String
    public var name: String
    public var slug: String
    public var description: String?
    public var privacy: String?
    public var permission: String
    public var permissions: Permissions?
    public var url: URL
    /// Example: "https://github.com/orgs/rails/teams/core"
    public var htmlURL: URL
    public var membersURL: String
    public var repositoriesURL: URL
    /// Team Simple
    ///
    /// Groups of organization members that gives permissions on specified repositories.
    public var parent: TeamSimple?

    public struct Permissions: Codable {
        public var isPull: Bool
        public var isTriage: Bool
        public var isPush: Bool
        public var isMaintain: Bool
        public var isAdmin: Bool

        public init(isPull: Bool, isTriage: Bool, isPush: Bool, isMaintain: Bool, isAdmin: Bool) {
            self.isPull = isPull
            self.isTriage = isTriage
            self.isPush = isPush
            self.isMaintain = isMaintain
            self.isAdmin = isAdmin
        }

        private enum CodingKeys: String, CodingKey {
            case isPull = "pull"
            case isTriage = "triage"
            case isPush = "push"
            case isMaintain = "maintain"
            case isAdmin = "admin"
        }
    }

    public init(id: Int, nodeID: String, name: String, slug: String, description: String? = nil, privacy: String? = nil, permission: String, permissions: Permissions? = nil, url: URL, htmlURL: URL, membersURL: String, repositoriesURL: URL, parent: TeamSimple? = nil) {
        self.id = id
        self.nodeID = nodeID
        self.name = name
        self.slug = slug
        self.description = description
        self.privacy = privacy
        self.permission = permission
        self.permissions = permissions
        self.url = url
        self.htmlURL = htmlURL
        self.membersURL = membersURL
        self.repositoriesURL = repositoriesURL
        self.parent = parent
    }

    private enum CodingKeys: String, CodingKey {
        case id
        case nodeID = "node_id"
        case name
        case slug
        case description
        case privacy
        case permission
        case permissions
        case url
        case htmlURL = "html_url"
        case membersURL = "members_url"
        case repositoriesURL = "repositories_url"
        case parent
    }
}
